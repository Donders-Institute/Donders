
include "TemplateVARS.pcl";		# Include all the subroutines.
include "EyelinkSUBS.pcl"; 
######################## CONDITION INFO SUBS ##############################
#--------------------------Get_Kbd_Input-------------------------------------
sub GetKeyboardInput(string sInputText) begin
	t_Info1.set_caption(sInputText, true);
	t_Info2.set_caption(" ", true);
	p_Info.present();
	system_keyboard.set_case_mode(3); # Capitals possible
	sKeyboardInput = system_keyboard.get_input( p_Info, t_Info2 ); # Gets any keyboard input, including backpaces
end;


#-----------------------------Get_stimulus_file------------------------------------
sub GetStimulusInputFile(string sInputfileName )
begin    
	
	input_file inputfile = new input_file;
	inputfile.open( sInputfileName );    
	inputfile.set_delimiter( '\n' ); 						# for get_line()
	string sDummy = inputfile.get_line();					# dummy read of the first line

	loop iTrialCount = 1 until								
		inputfile.end_of_file() || !inputfile.last_succeeded()
	begin
		sDummy = inputfile.get_line();
		sDummy.split("\t",asTrialInputData[iTrialCount]);
		iTrialCount = iTrialCount + 1;
	end;  
	
	if !inputfile.last_succeeded() then
		term.print( "Error in input file!\n" )
	end;   
	inputfile.close();
  
end;   

################################################### 
sub ShowText( string sMessage ) begin
	
   t_Text1.set_caption( sMessage, true );
   p_Text.present();

end;

#-----------------------------Wait------------------------------------
sub Wait(int iDurWait) begin

	loop 
		iTimeStamp = clock.time();
	until (clock.time() >= iTimeStamp + iDurWait)
	begin 
	end;

end;

#-----------------------------WaitUntilTimeStamp------------------------------------
sub WaitUntilTimeStamp(int iDurTimestamp) begin

   loop 
	until clock.time() >= iDurTimestamp
   begin 
	end;

end;

#-----------------------------WaitSubjectReady------------------------------------
sub WaitForAllButtonpress begin
    
   loop 
		iCountOld = response_manager.total_response_count()
   until response_manager.total_response_count() > iCountOld
   begin 
	end;
   
end;

#-----------------------------WaitForAllButtonpressTime------------------------------------
sub WaitForAllButtonpressTime( int iDurWait ) begin

   loop 
		iCountOld = response_manager.total_response_count();	
		iTimeStamp = clock.time();
	until ((response_manager.total_response_count() > iCountOld) || (clock.time() >= iTimeStamp + iDurWait))
   begin 
	end;

end;


#-----------------------------WaitForAllButtonpress------------------------------------
sub WaitForButtonpress( int iButton ) begin

   loop 
		iCountOld = response_manager.total_response_count(iButton)
   until response_manager.total_response_count(iButton) > iCountOld
   begin 
	end;

end;

############################ LOGFILE #######################   
#-----------------------------CreateOutput------------------------------------
sub CreateHeaderOutputFile(string sFilename ) begin

	string sTrialData = "";
 
	sTrialData.append("Trial_nr" + "\t");   
	sTrialData.append("Filename" + "\t");   
	sTrialData.append("FixationTime" + "\n");   
	
   OutputFile.open( sFilename, false ); # don't overwrite
   OutputFile.print( sTrialData );
   OutputFile.close();

end; 

#-----------------------------WriteOutput------------------------------------

sub WriteTrialToOutputFile(string sFilename ) begin

	string sTrialData = "";

	sTrialData.append(string(iTotalTrialCount) + "\t");   #write variable followed by a tab
	sTrialData.append(sOutputFilename + "\t");   
	sTrialData.append(string(iFixationTime) + "\n");   

   OutputFile.open_append ( sFilename);
   OutputFile.print( sTrialData );
   OutputFile.close();
        
end;

sub CreateDummyScreen(string s_DummyScreenFilename) begin
	
	b_BitmapLeft.set_filename("dummy.jpg");
	b_BitmapRight.set_filename("dummy.jpg");
	
	b_BitmapLeft.load();
	b_BitmapRight.load();

	p_Stimulus.present();
	int iDummyScreenTime = clock.time();	
	display_device.screenshot(s_DummyScreenFilename);
	int iScreenshotDuration = clock.time()-iDummyScreenTime;	

	ShowText("Note that the subroutine used to present the trial screens will take a screenshot after the screen becomes visible, which takes time. Taking a screenshot of the previous (dummy) screen took " + string(iScreenshotDuration) + " ms, during which Presentation did not process any tracker data (data can still be recorded to the .edf file). This time will vary somewhat between screenshots. Depending on the type of experiment, this kind of delay may or may not be acceptible. Alternatively, you can move the screenshot to the end of the trial (for ex. after a critical period, e.g. after a response has been made). If neither is possible, the best option is pre-generating each trial as a single image, in which case you do not need to take screenshot.\n\nPress ENTER to continue with this example experiment.");
	
end;

############################ TRIAL #######################   

#-----------------------------runtrials------------present one by one------------------------
sub RunTrial begin

		int iTrialCode = int(asTrialInputData[iTotalTrialCount][1]);
		b_BitmapLeft.set_filename(asTrialInputData[iTotalTrialCount][2]+".jpg");
		b_BitmapRight.set_filename(asTrialInputData[iTotalTrialCount][3]+".jpg");
		int iAnimalLocation = int(asTrialInputData[iTotalTrialCount][4]);
		
		b_BitmapLeft.load();
		b_BitmapRight.load();
		
		p_Fixation.present();
		iFixationTime = clock.time();
		wait_until(iFixationTime+500);
		PresentTrialTakeScreenshotPresLink(p_Stimulus, iTrialCode , sSubno, "DummyScreen.bmp",iFixationTime+2000-9);
		MeasureGazeInArea(iAnimalLocation,aiPictureLocations,500);
		EndTrialPresLink();
		WriteTrialToOutputFile(sOutputFilename);

end;




###################################################                                                       


